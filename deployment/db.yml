AWSTemplateFormatVersion: 2010-09-09

Parameters:

  StackPrefix:
    Type: String

  InstanceClass:
    Type: String
    Default: db.t3.medium
    AllowedValues:
      - db.t3.medium
      - db.r5.large
      - db.r5.xlarge

  EngineVersion:
    Type: String
    Default: 10.7

  RetentionPeriod:
    Type: Number
    MinValue: 1
    MaxValue: 35
    Description: Days to keep snapshots

Resources:

  Record:
    Type: AWS::Route53::RecordSet
    Properties:
      TTL: 60
      Type: CNAME
      HostedZoneId:
        Fn::ImportValue:
          !Sub ${StackPrefix}-dns-privatehzi
      Name:
        Fn::ImportValue:
          !Sub ${StackPrefix}-dns-db-name
      ResourceRecords:
        - !GetAtt Cluster.Endpoint.Address

  ReadRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      TTL: 60
      Type: CNAME
      HostedZoneId:
        Fn::ImportValue:
          !Sub ${StackPrefix}-dns-privatehzi
      Name:
        Fn::ImportValue:
          !Sub ${StackPrefix}-dns-db-readname
      ResourceRecords:
        - !GetAtt Cluster.Endpoint.Address

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref AWS::StackName
      VpcId:
        Fn::ImportValue:
          !Sub ${StackPrefix}-vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId:
            Fn::ImportValue:
              !Sub ${StackPrefix}-cluster-sg

  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Ref AWS::StackName
      SubnetIds:
        - Fn::ImportValue:
            !Sub ${StackPrefix}-vpc-private-a
        - Fn::ImportValue:
            !Sub ${StackPrefix}-vpc-private-b

  ClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Ref AWS::StackName
      Family: aurora-postgresql10
      Parameters:
        rds.force_ssl: 1

  ParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Ref AWS::StackName
      Family: aurora-postgresql10
      Parameters:
        shared_preload_libraries: auto_explain,pg_stat_statements,pg_hint_plan,pgaudit
        log_statement: 'ddl'
        log_connections: '1'
        log_disconnections: '1'
        log_lock_waits: '1'
        log_min_duration_statement: '5000'
        auto_explain.log_min_duration: '5000'
        auto_explain.log_verbose: '1'
        log_rotation_age: '1440'
        log_rotation_size: '102400'
        rds.log_retention_period: '10080'
        random_page_cost: '1'
        track_activity_query_size: '16384'
        idle_in_transaction_session_timeout: '7200000'
        statement_timeout: '7200000'
        search_path: '"$user",public'

  MasterSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${StackPrefix}/rds/password
      GenerateSecretString:
        ExcludeCharacters: '"@/\'
        PasswordLength: 16

  Cluster:
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Type: AWS::RDS::DBCluster
    Properties:
      BackupRetentionPeriod: !Ref RetentionPeriod
      DatabaseName: !Ref StackPrefix
      DBClusterParameterGroupName: !Ref ClusterParameterGroup
      DBSubnetGroupName: !Ref SubnetGroup
      Engine: aurora-postgresql
      EngineMode: provisioned
      EngineVersion: !Ref EngineVersion
      KmsKeyId: !GetAtt EncryptionKey.Arn
      MasterUsername: master
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${MasterSecret}}}'
      Port: 5432
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - !Ref SecurityGroup

  InstanceA:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref InstanceClass
      DBClusterIdentifier: !Ref Cluster
      Engine: aurora-postgresql
      EngineVersion: !Ref EngineVersion
      DBParameterGroupName: !Ref ParameterGroup
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName: !Ref SubnetGroup
      PubliclyAccessible: false
      EnablePerformanceInsights: true
      PerformanceInsightsKMSKeyId: !Ref EncryptionKey
      PerformanceInsightsRetentionPeriod: !Ref RetentionPeriod

  InstanceB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref InstanceClass
      DBClusterIdentifier: !Ref Cluster
      Engine: aurora-postgresql
      EngineVersion: !Ref EngineVersion
      DBParameterGroupName: !Ref ParameterGroup
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName: !Ref SubnetGroup
      PubliclyAccessible: false
      EnablePerformanceInsights: true
      PerformanceInsightsKMSKeyId: !Ref EncryptionKey
      PerformanceInsightsRetentionPeriod: !Ref RetentionPeriod

  EncryptionKeyAlias:
    Type: AWS::KMS::Alias
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    DependsOn: Cluster
    Properties:
      AliasName: !Sub alias/${Cluster}-rds
      TargetKeyId: !Ref EncryptionKey

  EncryptionKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: !Ref AWS::StackName
      Enabled: true
      EnableKeyRotation: true
      KeyUsage: ENCRYPT_DECRYPT
      PendingWindowInDays: 30
      KeyPolicy:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:CreateGrant
          - kms:ListGrants
          - kms:DescribeKey
          Resource: '*'
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref AWS::AccountId
              kms:ViaService: !Sub rds.${AWS::Region}.amazonaws.com

Outputs:
  ClusterName:
    Value: !Ref Cluster
    Export:
      Name: !Sub ${StackPrefix}-db
  DBUserSecret:
    Value: !Ref MasterSecret
    Export:
      Name: !Sub ${StackPrefix}-db-secret
  DNSName:
    Value: !GetAtt Cluster.Endpoint.Address
    Export:
      Name: !Sub ${StackPrefix}-db-dns-name
  ReadDNSName:
    Value: !GetAtt Cluster.ReadEndpoint.Address
    Export:
      Name: !Sub ${StackPrefix}-db-dns-readname
