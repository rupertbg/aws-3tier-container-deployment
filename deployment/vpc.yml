AWSTemplateFormatVersion: 2010-09-09

Parameters:
  StackPrefix:
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsHostnames: true
      EnableDnsSupport: true
      CidrBlock: 10.42.0.0/16
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-vpc

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.42.1.0/24
      AvailabilityZone: !Sub ${AWS::Region}a
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-public-a

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.42.2.0/24
      AvailabilityZone: !Sub ${AWS::Region}b
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-public-b

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.42.3.0/24
      AvailabilityZone: !Sub ${AWS::Region}a
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-private-a

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.42.4.0/24
      AvailabilityZone: !Sub ${AWS::Region}b
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-private-b

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-public

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-private

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable

  EndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-endpoints
      GroupDescription: !Sub Security group for ${AWS::StackName} endpoints
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.42.3.0/24
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.42.4.0/24

  LogsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  MonitoringEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.monitoring
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  SecretsManagerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.secretsmanager
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  ECSAPIEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  ECREndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      VpcEndpointType: Interface
      VpcId: !Ref VPC
      PolicyDocument: !Sub |
        {
          "Statement": [
            {
              "Sid": "Access-to-ecr-bucket-only",
              "Principal": "*",
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": ["arn:aws:s3:::prod-${AWS::Region}-starport-layer-bucket/*"]
            }
          ]
        }

Outputs:
  VPCId:
    Value: !Ref VPC
    Export:
      Name: !Sub ${StackPrefix}-vpc
  VPCCidr:
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub ${StackPrefix}-vpc-cidr
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub ${StackPrefix}-vpc-public-a
  PublicSubnetB:
    Value: !Ref PublicSubnetB
    Export:
      Name: !Sub ${StackPrefix}-vpc-public-b
  PublicSubnetACidr:
    Value: 10.42.1.0/24
    Export:
      Name: !Sub ${StackPrefix}-vpc-public-a-cidr
  PublicSubnetBCidr:
    Value: 10.42.2.0/24
    Export:
      Name: !Sub ${StackPrefix}-vpc-public-b-cidr
  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub ${StackPrefix}-vpc-private-a
  PrivateSubnetB:
    Value: !Ref PrivateSubnetB
    Export:
      Name: !Sub ${StackPrefix}-vpc-private-b
  PrivateSubnetACidr:
    Value: 10.42.3.0/24
    Export:
      Name: !Sub ${StackPrefix}-vpc-private-a-cidr
  PrivateSubnetBCidr:
    Value: 10.42.4.0/24
    Export:
      Name: !Sub ${StackPrefix}-vpc-private-b-cidr
