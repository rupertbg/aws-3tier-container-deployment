AWSTemplateFormatVersion: 2010-09-09

Parameters:

  StackPrefix:
    Type: String

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref StackPrefix

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster containers
      VpcId:
        Fn::ImportValue:
          !Sub ${StackPrefix}-vpc

  ALBIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Load Balancer
      GroupId: !Ref SecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId:
        Fn::ImportValue:
          !Sub ${StackPrefix}-alb-sg

  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: !Sub ${StackPrefix}-ecs
        PolicyDocument:
          Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - ec2:AttachNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:CreateNetworkInterfacePermission
              - ec2:DeleteNetworkInterface
              - ec2:DeleteNetworkInterfacePermission
              - ec2:Describe*
              - ec2:DetachNetworkInterface
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:Describe*
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:RegisterTargets

Outputs:
  ClusterName:
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${StackPrefix}-cluster
  ECSRole:
    Value: !GetAtt ECSRole.Arn
    Export:
      Name: !Sub ${StackPrefix}-ecs-role
  ClusterSecurityGroup:
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub ${StackPrefix}-cluster-sg
