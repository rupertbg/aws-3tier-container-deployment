AWSTemplateFormatVersion: 2010-09-09

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Pipeline
        Parameters:
          - StackPrefix
      - Label:
          default: Github Repository
        Parameters:
          - GithubRepoOwner
          - GithubRepoName
          - GithubRepoBranch
          - GithubCodeStarConnection
      - Label:
          default: Domain
        Parameters:
          - PublicTLD
          - PublicTLDHostedZoneId
      - Label:
          default: Application
        Parameters:
          - AppContainerCount
          - AppContainerPort
          - AppCPU
          - AppMemoryMB
          - AppLogRetention
      - Label:
          default: Database
        Parameters:
          - DBInstanceClass
          - DBEngineVersion
          - DBRetentionPeriod
    ParameterLabels:
      StackPrefix:
        default: "StackPrefix: What simple string would you like to prefix all resource names with?"
      GithubRepoOwner:
        default: "GithubRepoOwner: What's the username of the repo owner?"
      GithubRepoName:
        default: "GithubRepoName: What's the name of the repo?"
      GithubRepoBranch:
        default: "GithubRepoBranch: Which branch would you like to use?"
      GithubCodeStarConnection:
        default: "GithubCodeStarConnection: What is the ARN of the CodeStar Connection to use for connection to GitHub?"
      PublicTLD:
        default: "PublicTLD: What is the domain you want to use e.g. subdomain.example.com?"
      PublicTLDHostedZoneId:
        default: "PublicTLDHostedZoneId: What is the Hosted Zone ID in Route 53 of that domain?"
      AppContainerCount:
        default: "AppContainerCount: How many containers would you like to run? The max is 2000!"
      AppContainerPort:
        default: "AppContainerPort: What port does the sample application run on? The default is fine."
      AppCPU:
        default: "AppCPU: How much CPU should the sample app container have? The default is fine."
      AppMemoryMB:
        default: "AppMemoryMB: How much RAM should the sample app container have? The default is fine."
      AppLogRetention:
        default: "AppLogRetention: How many days would you like to keep the application logs? The default is fine."
      DBInstanceClass:
        default: "DBInstanceClass: How big should the RD Database Instance be? The default is fine."
      DBEngineVersion:
        default: "DBEngineVersion: Which version of Postgres should the RDS Database run? The default is fine."
      DBRetentionPeriod:
        default: "DBRetentionPeriod: How many days would you like to keep the database snapshots for? The default is fine."

Parameters:
  StackPrefix:
    Type: String
    Default: aws-ttcd
    AllowedPattern: (?!^-)(?!.*?-$)(?!.*?--)^[a-zA-Z-]+$
    ConstraintDescription: Letters-only with optional non-repeating dashes within
    Description: Prefix for stack names etc

  GithubRepoOwner:
    Type: String
    Default: rupertbg

  GithubRepoName:
    Type: String
    Default: aws-3tier-container-deployment

  GithubRepoBranch:
    Type: String
    Default: master

  GithubCodeStarConnection:
    Type: String

  PublicTLD:
    Type: String
    Description: Public Top level domain (TLD) in Route 53 to use for public DNS

  PublicTLDHostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: HostedZoneId of Public TLD

  AppContainerCount:
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 2000
    Description: Number of application containers to run

  AppContainerPort:
    Type: String
    Default: 8080
    Description: Port that the container application runs on

  AppCPU:
    Type: Number
    Default: 256
    MinValue: 256
    MaxValue: 4096
    Description: >-
      CPU units to allocate to container (1024 == 1 logical CPU). See
      https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html

  AppMemoryMB:
    Type: Number
    Default: 512
    MinValue: 512
    MaxValue: 30720
    Description: >-
      RAM to allocate to container in Megabytes. See
      https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html

  AppLogRetention:
    Type: Number
    Default: 7
    MinValue: 1
    MaxValue: 30
    Description: Days to keep application logs in CloudWatch

  DBInstanceClass:
    Type: String
    Default: db.t3.medium
    AllowedValues:
      - db.t3.medium
      - db.r5.large
      - db.r5.xlarge

  DBEngineVersion:
    Type: String
    Default: 10.7
    Description: Major version of RDS Postresql to use

  DBRetentionPeriod:
    Type: Number
    Default: 7
    MinValue: 1
    MaxValue: 35
    Description: Days to keep snapshots

Conditions:
  notUSEast1: !Not
    - !Equals
      - !Ref AWS::Region
      - us-east-1

Resources:
  PipelineBucket:
    Type: AWS::S3::Bucket
    DependsOn: CloudformationRole
    Properties:
      BucketName: !Sub ${StackPrefix}-codepipeline-${AWS::Region}

  ECRRepository:
    Type: AWS::ECR::Repository
    DependsOn: CloudformationRole
    Properties:
      RepositoryName: !Sub ${GithubRepoOwner}/${GithubRepoName}
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep 10",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  AppBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CloudformationRole
    Properties:
      Name: !Sub ${GithubRepoName}-app-builder
      Description: !Sub Builds the applications for ${GithubRepoName}
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        PrivilegedMode: true
      TimeoutInMinutes: 10
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployment/prereq/build-apps.sh

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${StackPrefix}-pipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      RestartExecutionOnUpdate: true
      ArtifactStores:
        - Region: !Ref AWS::Region
          ArtifactStore:
            Type: S3
            Location: !Ref PipelineBucket
        - !If
          - notUSEast1
          - Region: us-east-1
            ArtifactStore:
              Type: S3
              Location: !Sub ${StackPrefix}-codepipeline-us-east-1
          - Ref: AWS::NoValue
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              RunOrder: 1
              Configuration:
                ConnectionArn: !Ref GithubCodeStarConnection
                FullRepositoryId: !Sub ${GithubRepoOwner}/${GithubRepoName}
                BranchName: !Ref GithubRepoBranch
                DetectChanges: true
              OutputArtifacts:
                - Name: source

        - Name: Setup
          Actions:
            - Name: UpdatePipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              InputArtifacts:
                - Name: source
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: !Ref AWS::StackName
                RoleArn: !GetAtt CloudformationRole.Arn
                TemplateConfiguration: source::deployment/config/pipeline.json
                TemplatePath: source::deployment/prereq/pipeline.yml
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ParameterOverrides: !Sub '{ "StackPrefix": "${StackPrefix}" }'
              RunOrder: 1

        - Name: Infra
          Actions:
            - Name: VPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-vpc
                TemplatePath: source::deployment/vpc.yml
                ParameterOverrides: !Sub '{ "StackPrefix": "${StackPrefix}" }'
              InputArtifacts:
                - Name: source

            - Name: WAF
              Region: us-east-1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-waf
                TemplatePath: source::deployment/waf.yml
                ParameterOverrides: !Sub |
                  {
                    "StackPrefix": "${StackPrefix}",
                    "AppDomain": "${PublicTLD}"
                  }
              InputArtifacts:
                - Name: source

            - Name: WAFRegional
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-waf-regional
                TemplatePath: source::deployment/waf-regional.yml
                ParameterOverrides: !Sub |
                  {
                    "StackPrefix": "${StackPrefix}",
                    "PublicTLD": "${PublicTLD}"
                  }
              InputArtifacts:
                - Name: source

            - Name: DNS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 2
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-dns
                TemplatePath: source::deployment/dns.yml
                ParameterOverrides: !Sub |
                  {
                    "StackPrefix": "${StackPrefix}",
                    "PublicTLD": "${PublicTLD}",
                    "PublicTLDHostedZoneId": "${PublicTLDHostedZoneId}",
                    "ALBSubdomain": "${StackPrefix}-${AWS::Region}-alb",
                    "PrivateTLD": "${StackPrefix}-private"
                  }
              InputArtifacts:
                - Name: source

            - Name: ALB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 3
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-alb
                TemplatePath: source::deployment/alb.yml
                ParameterOverrides: !Sub '{ "StackPrefix": "${StackPrefix}" }'
              InputArtifacts:
                - Name: source

            - Name: CDN
              Region: us-east-1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 3
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-cdn
                TemplatePath: source::deployment/cdn.yml
                ParameterOverrides: !Sub |
                  {
                    "StackPrefix": "${StackPrefix}",
                    "ALBDomain": "${StackPrefix}-${AWS::Region}-alb.${PublicTLD}",
                    "AppDomain": "${PublicTLD}",
                    "PublicTLDHostedZoneId": "${PublicTLDHostedZoneId}"
                  }
              InputArtifacts:
                - Name: source

            - Name: Cluster
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 4
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-cluster
                TemplatePath: source::deployment/cluster.yml
                ParameterOverrides: !Sub '{ "StackPrefix": "${StackPrefix}" }'
              InputArtifacts:
                - Name: source

            - Name: Database
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 5
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-db
                TemplatePath: source::deployment/db.yml
                ParameterOverrides: !Sub |
                  {
                    "StackPrefix": "${StackPrefix}",
                    "InstanceClass": "${DBInstanceClass}",
                    "EngineVersion": "${DBEngineVersion}",
                    "RetentionPeriod": "${DBRetentionPeriod}"
                  }
              InputArtifacts:
                - Name: source

        - Name: Build
          Actions:
            - Name: App
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              RunOrder: 1
              Configuration:
                ProjectName: !Ref AppBuildProject
              InputArtifacts:
                - Name: source
              OutputArtifacts:
                - Name: appbuild

        - Name: Deploy
          Actions:
            - Name: App
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 1
              InputArtifacts:
                - Name: source
                - Name: appbuild
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${StackPrefix}-app
                TemplatePath: source::deployment/app.yml
                ParameterOverrides: !Sub |
                  {
                    "StackPrefix": "${StackPrefix}",
                    "DesiredCount": "${AppContainerCount}",
                    "Port": "${AppContainerPort}",
                    "CPUUnits": "${AppCPU}",
                    "MemoryMB": "${AppMemoryMB}",
                    "LogRetention": "${AppLogRetention}",
                    "Image": {
                      "Fn::GetParam": [
                        "appbuild",
                        "output.json",
                        "Image"
                      ]
                    }
                  }

  CodePipelineRole:
    DependsOn: CloudformationRole
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-codepipeline
          PolicyDocument:
            Statement:
              - Action:
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"
                Effect: Allow
              - Action:
                  - ecr:DescribeImages
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${StackPrefix}-codepipeline-*
                  - !Sub arn:aws:s3:::${StackPrefix}-codepipeline-*/*
                Effect: Allow

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-cloudformation
          PolicyDocument:
            Statement:
              - Action:
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - kms:CreateKey
                  - kms:PutKeyPolicy
                  - kms:DeleteAlias
                  - kms:Describe*
                  - kms:Get*
                  - kms:List*
                  - kms:UpdateAlias
                  - kms:UpdateKeyDescription
                  - kms:*KeyRotation
                Resource: "*"
                Effect: Allow
              - Action:
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - cloudfront:*
                  - waf:*
                  - waf-regional:*
                  - lambda:*
                  - s3:*
                  - logs:*
                  - sns:*
                  - route53:*
                  - secretsmanager:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - ecr:*
                  - kms:*
                  - codebuild:*
                  - codepipeline:*
                Resource: "*"
                Effect: Allow
              - Action: iam:*
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${StackPrefix}-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/cfn-certificate-provider-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:policy/${StackPrefix}-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:policy/cfn-certificate-provider-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS
                Effect: Allow
              - Effect: Allow
                Action: secretsmanager:*
                Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${StackPrefix}*

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-codebuild
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action: iam:AssumeRole
                Resource: !GetAtt CloudformationRole.Arn
              - Action:
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${StackPrefix}-codepipeline-*
                  - !Sub arn:aws:s3:::${StackPrefix}-codepipeline-*/*
                Effect: Allow
              - Effect: Allow
                Action:
                  - ecr:CreateRepository
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource: "*"
