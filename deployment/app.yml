AWSTemplateFormatVersion: 2010-09-09

Parameters:

  StackPrefix:
    Type: String

  DesiredCount:
    Type: Number
    Default: 2

  Port:
    Type: String
    Default: 8080

  Image:
    Type: String

  CPUUnits:
    Type: Number
    Default: 256
    Description: 1 CPU == 1024

  MemoryMB:
    Type: Number
    Default: 512

  LogRetention:
    Type: Number
    Default: 7

Resources:

  ExampleAppTarget:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub ${StackPrefix}-vpc
      Port: !Ref Port
      Protocol: HTTP
      Matcher:
          HttpCode: 200-399
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 15
      HealthCheckIntervalSeconds: 30
      TargetType: ip
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '30'

  ExampleAppListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
        ListenerArn:
          Fn::ImportValue:
            !Sub ${StackPrefix}-alb-listener
        Priority: 2
        Conditions:
          - Field: host-header
            Values:
              - Fn::ImportValue:
                  !Sub ${StackPrefix}-dns-alb-name
        Actions:
          - TargetGroupArn: !Ref ExampleAppTarget
            Type: forward

  TaskExecRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${StackPrefix}-ecs-task-exec
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource:
                  Fn::ImportValue:
                    !Sub ${StackPrefix}-db-secret

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /${StackPrefix}/ExampleApp
      RetentionInDays: !Ref LogRetention

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref StackPrefix
      Cpu: !Ref CPUUnits
      Memory: !Ref MemoryMB
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt TaskExecRole.Arn
      ContainerDefinitions:
        - Name: !Sub ${StackPrefix}-ExampleApp
          Cpu: !Ref CPUUnits
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix:
                Fn::ImportValue:
                  !Sub ${StackPrefix}-cluster
          Memory: !Ref MemoryMB
          Image: !Ref Image
          PortMappings:
            - ContainerPort: !Ref Port
          Environment:
            - Name: POSTGRES_HOSTNAME
              Value:
                Fn::ImportValue:
                  !Sub ${StackPrefix}-dns-db-name
            - Name: POSTGRES_DATABASE_NAME
              Value: !Ref StackPrefix
            - Name: POSTGRES_USER
              Value: master
          Secrets:
            - Name: POSTGRES_PASSWORD
              ValueFrom:
                Fn::ImportValue:
                  !Sub ${StackPrefix}-db-secret

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue:
          !Sub ${StackPrefix}-cluster
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref DesiredCount
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Sub ${StackPrefix}-cluster-sg
          Subnets:
            - Fn::ImportValue:
                !Sub ${StackPrefix}-vpc-private-a
            - Fn::ImportValue:
                !Sub ${StackPrefix}-vpc-private-b
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Sub ${StackPrefix}-ExampleApp
          ContainerPort: !Ref Port
          TargetGroupArn: !Ref ExampleAppTarget
